"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.components import productwithuuid as components_productwithuuid
from typing import Optional


@dataclasses.dataclass
class ProductDataRequest:
    product_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'product_id', 'style': 'simple', 'explode': False }})
    r"""The internal product id."""
    inference_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'inference_id', 'style': 'form', 'explode': True }})
    r"""The inference id."""
    



@dataclasses.dataclass
class ProductDataResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    product_with_uuid: Optional[components_productwithuuid.ProductWithUUID] = dataclasses.field(default=None)
    r"""Product data"""
    

